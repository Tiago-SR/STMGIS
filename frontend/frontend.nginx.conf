server {
    listen 80;
    server_name proyecto.local;  # Cambia esto por el nombre de dominio real o IP

    gzip on;
    gzip_http_version 1.1;
    gzip_disable "MSIE [1-6]\.";
    gzip_min_length 256;
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 9;
    client_max_body_size 5M;
    proxy_read_timeout 200s;

    # Ruta para servir el frontend Angular (HTML, CSS, JS)
    location / {
        root /usr/share/nginx/html;  # Asegúrate de que tus archivos de Angular estén aquí
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "public, max-age=1M";
    }

    # Ruta para la API de Django
    location /api/ {
        proxy_pass http://localhost:8000/;  # Asegúrate de que Django está corriendo en este puerto
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    # Configuración de WebSocket (si es necesario)
    location /ws/ {
        proxy_pass http://localhost:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    # Ruta para verificación de estado de Nginx (health check)
    location /healthcheck {
        access_log off;
        add_header 'Content-Type' 'text/plain';
        return 200 "Healthy\n";
    }

    # Manejo de errores
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

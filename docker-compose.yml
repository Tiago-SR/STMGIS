# docker-compose up -d

#  Comando para build de la imagen de docker. Se ejecuta SOLO UNA VEZ
#  docker build -t lab-front-test:v1.0-dev -f ./frontend/dev.Dockerfile ./frontend/

# Comando para build de la imagen de docker del backend. Se ejecuta SOLO UNA VEZ
# docker build -t lab-back-test:v1.0-dev -f ./backend/Dockerfile ./backend/

# C:\Windows\System32\drivers\etc\hosts agregar api.proyecto.local y proyecto.local apuntando a 127.0.0.1



services:
  db:
    image: postgis/postgis:15-3.3
    container_name: db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: STMGIS
    ports:
      - "5432:5432"
    volumes:
      - bd_data:/data/db
    networks:
      - net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: 123
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - net

  backend:
    image: lab-back-test:v1.0-dev
    container_name: backend
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/__pycache__/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - pgadmin
    environment:
      - DEBUG=1
      - DB_NAME=STMGIS
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_HOST=db
      - DB_PORT=5432
    networks:
      - net

  frontend:
    image: lab-front-test:v1.0-dev
    container_name: frontend
    volumes:
      - ./frontend:/app
    ports:
      - "4200:4200"
    environment:
      - CHOKIDAR_USEPOLLING=true  # Necesario para ver cambios en sistemas de archivos Docker
    depends_on:
      - backend
    networks:
      - net

  # Proxy inverso para el frontend.
  proxy:
    image: nginx
    container_name: proxy
    ports:
      - "80:80"
    volumes:
      - ./proxyinverso.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
    networks:
      - net

volumes:
  bd_data:

networks:
  net:
    driver: bridge
